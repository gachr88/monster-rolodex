{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","monsters","map","monster","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,GAAhC,4BACtB,6BAAMJ,EAAMK,OACZ,4BAAIL,EAAMM,YCHTC,EAAW,SAACP,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMQ,SAASC,KAAI,SAAAC,GACjB,OAAO,cAAC,EAAD,CAAuBL,KAAMK,EAAQL,KAAMD,GAAIM,EAAQN,GAAIE,MAAOI,EAAQJ,OAA/DI,EAAQN,UCL3BO,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACpC,OACI,uBACIC,KAAK,OACLb,UAAU,aACVW,YAAaA,EACbG,SAAUF,MCkCPG,E,kDArCb,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpC,EAAKC,MAAQ,CACXd,SAAS,GACTW,YAAY,IAJH,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,oBAOzC,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAApB,GAAO,OAAIA,EAAQL,KAAK0B,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAGrB,cAAC,EAAD,CAAUL,SAAUqB,W,GA/BVI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.457585c7.chunk.js","sourcesContent":["import React from \"react\";\nimport './card.style.css';\nexport const Card = (props) =>{\n    return (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.id}?set=set2&size=180x180`}></img>\n            <h2 >{props.name}</h2>\n            <p>{props.email}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport './card-list.style.css';\nimport { Card } from \"../card/card.component\";  \n\nexport const CardList = (props) => {\n    return <div className=\"card-list\">\n         {\n            props.monsters.map(monster => {\n              return <Card key={monster.id} name={monster.name} id={monster.id} email={monster.email}/>\n            })\n          }\n    </div>\n}","import React from \"react\";\nimport \"./search-box.style.css\";\n\nexport const SearchBox = ({placeholder, handleChange}) =>{\n    return (\n        <input \n            type=\"text\" \n            className=\"search-box\" \n            placeholder={placeholder} \n            onChange={handleChange}\n        />\n    );\n}","import React from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';  \nimport { SearchBox} from './components/search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters:[],\n      searchField:\"\"\n    };\n\n    //this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  handleChange = e => {\n    this.setState({searchField:e.target.value});\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder='Search monsters'\n          handleChange={this.handleChange}\n        />\n      \n        <CardList monsters={filteredMonsters} />   \n               \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}